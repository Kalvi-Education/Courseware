"use strict";(self.webpackChunkcourseware=self.webpackChunkcourseware||[]).push([[2535],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=m(n),c=a,d=g["".concat(s,".").concat(c)]||g[c]||p[c]||o;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const o={},i="How to learn a new programming language(Lab) - Part 2",l={unversionedId:"docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/How-to-learn-any-new-programming-language-Part2",id:"docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/How-to-learn-any-new-programming-language-Part2",title:"How to learn a new programming language(Lab) - Part 2",description:"Lesson Objective",source:"@site/Semester-1/docs/Problem-solving-using-Programming/01-Solving-problems-&-Writing-Algorithms/10-How-to-learn-any-new-programming-language-Part2.mdx",sourceDirName:"docs/Problem-solving-using-Programming/01-Solving-problems-&-Writing-Algorithms",slug:"/docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/How-to-learn-any-new-programming-language-Part2",permalink:"/Courseware/Semester-1/docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/How-to-learn-any-new-programming-language-Part2",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How to learn any new Programming Language",permalink:"/Courseware/Semester-1/docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/How-to-learn-any-new-programming-language-"},next:{title:"Computational Thinking",permalink:"/Courseware/Semester-1/docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/Pillars-of-Computational-Thinking"}},s={},m=[{value:"Lesson Objective",id:"lesson-objective",level:2},{value:"Introduction to the lesson",id:"introduction-to-the-lesson",level:2},{value:"The REPEAT Command",id:"the-repeat-command",level:3}],u={toc:m};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-learn-a-new-programming-languagelab---part-2"},"How to learn a new programming language(Lab) - Part 2"),(0,a.kt)("h2",{id:"lesson-objective"},"Lesson Objective"),(0,a.kt)("p",null,"You learnt the simple and beginner friendly language \u201cLOGO\u201d in the previous lesson. This lesson is a continuation of the previous lesson and goes into further detailed features of the language."),(0,a.kt)("h2",{id:"introduction-to-the-lesson"},"Introduction to the lesson"),(0,a.kt)("p",null,"You have already learnt around 20 basic commands used in LOGO programming in the previous lesson. We have also created a few shapes and figures using those commands. Let\u2019s look at some more features and commands of LOGO that will give you more power for drawing more complex and amazing figures. This is a self-paced class too."),(0,a.kt)("h3",{id:"the-repeat-command"},"The REPEAT Command"),(0,a.kt)("p",null,"We often repeat a sequence of commands. Computer programs in general perform a lot of repetitive tasks. Just about every programming system has a way of carrying out this repetition, or iteration, as computer scientists call it. "),(0,a.kt)("p",null,"Let us consider the following example,\nLet\u2019s say we want to draw a square with sides of length 100, we can do this with the following sequence of commands \u2013"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"fd 100 rt 90 fd 100 rt 90 fd 100 rt 90 fd 100 rt 90")),(0,a.kt)("p",null,"We note that the commands \u2013 ",(0,a.kt)("strong",{parentName:"p"},"fd 100 rt 90")," are repeated ",(0,a.kt)("em",{parentName:"p"},"four times"),". Will it not be simpler to tell the computer that it should just repeat these two commands four times instead of writing them four times in a row? We can do exactly this by using the REPEAT command."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"REPEAT n ","[instruction list]")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"This command repeats the action listed in the instruction list n number of times.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"To draw the square like in the above example, we would just have to write it as follows"),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"repeat 4 [fd 100 rt 90]")))),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://s3.ap-south-1.amazonaws.com/kalvi-education.github.io/problem-solving/logo2images9.png",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Any command can be done inside a loop i.e. we can even use a loop within a loop. A loop inside another loop is called ",(0,a.kt)("strong",{parentName:"li"},"a nested loop"),". This gives us even more power because now you can draw figures with even less commands than before.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Problem 1:"),"\nTry drawing an asterisk(*) using loops. The asterisk should have 18 arms instead of the five or six you normally see on a keypad. The figure should look something like this:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://s3.ap-south-1.amazonaws.com/kalvi-education.github.io/problem-solving/logo2images13.png",alt:null})),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Check the Hint!"),(0,a.kt)("p",null,"Hint: To draw eighteen arms we would rotate the circle each time by 360/18 = 20 degrees")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Check the Solution!"),(0,a.kt)("p",null,"cs repeat 18 ","[ fd 80 bk 80 rt 20]"),(0,a.kt)("p",null,"We draw the line 18 times by using the repeat command and each time we also rotate the turtle by 360/18 = 20 degrees.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Problem 2:"),"\nDraw the following grid of squares representing using LOGO."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://s3.ap-south-1.amazonaws.com/kalvi-education.github.io/problem-solving/logo2images14.png",alt:null})),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Check the Hint!"),(0,a.kt)("p",null,"Hint: Try drawing the figure by using the loop we used for drawing a square above and then using nested loops")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Check the Hint!"),(0,a.kt)("p",null,"cs rt 45\nrepeat 4 [repeat 4 ","[fd 50 rt 90 ]"," rt 90 fd 50]  "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"First we rotate the turtle initially to draw an \u201cX\u201d instead of \u201c+\u201d")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Then the inner loop draws a square as in the example we discussed above and the outer loop draws the square 4 times.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Each time after drawing one square we rotate the turtle by 90 degrees and move it forward by 90 units")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Problem 3:"),"\nDraw 30 octagons with edges that are each 50 units to formulate the following \u201cMandala\u201d figure:"))}p.isMDXComponent=!0}}]);