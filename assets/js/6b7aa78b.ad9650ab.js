"use strict";(self.webpackChunkcourseware=self.webpackChunkcourseware||[]).push([[458],{2987:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>h,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=o(7462),i=(o(7294),o(3905)),n=o(9304);const l={},r="Algorithmic Thinking and How Machines Think",s={unversionedId:"docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/Algorithmic-thinking-&-how-machines-think",id:"docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/Algorithmic-thinking-&-how-machines-think",title:"Algorithmic Thinking and How Machines Think",description:"Lesson Objective",source:"@site/Semester-1/docs/Problem-solving-using-Programming/01-Solving-problems-&-Writing-Algorithms/16-Algorithmic-thinking-&-how-machines-think.mdx",sourceDirName:"docs/Problem-solving-using-Programming/01-Solving-problems-&-Writing-Algorithms",slug:"/docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/Algorithmic-thinking-&-how-machines-think",permalink:"/Courseware/Semester-1/docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/Algorithmic-thinking-&-how-machines-think",draft:!1,tags:[],version:"current",sidebarPosition:16,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Computational Thinking - Algorithmic Thinking",permalink:"/Courseware/Semester-1/docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/Computational-Thinking-Algorithmic-Thinking"},next:{title:"Under the hood",permalink:"/Courseware/Semester-1/docs/Problem-solving-using-Programming/Solving-problems-&-Writing-Algorithms/Under-the-hood"}},h={},p=[{value:"Lesson Objective",id:"lesson-objective",level:2},{value:"Why is it important to understand how computers think(or do they\ud83e\udd14)?",id:"why-is-it-important-to-understand-how-computers-thinkor-do-they",level:2},{value:"Introduction to the Lesson",id:"introduction-to-the-lesson",level:2},{value:"How did computers become so clever?",id:"how-did-computers-become-so-clever",level:3},{value:"Definition of Algorithmic Thinking",id:"definition-of-algorithmic-thinking",level:2},{value:"Flowcharts",id:"flowcharts",level:2},{value:"Pseudocode",id:"pseudocode",level:2},{value:"How to think Algorithmically?",id:"how-to-think-algorithmically",level:2}],m={toc:p};function u(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"algorithmic-thinking-and-how-machines-think"},"Algorithmic Thinking and How Machines Think"),(0,i.kt)("h2",{id:"lesson-objective"},"Lesson Objective"),(0,i.kt)("p",null,"In this lesson, you will understand what thinking algorithmically actually means when you\u2019re dealing with computers and how exactly we can think in terms of algorithms to make computing hardware perform the tasks we require. This lesson might answer your questions of why intelligent engineers are needed for software engineering. Happy Learning!"),(0,i.kt)("h2",{id:"why-is-it-important-to-understand-how-computers-thinkor-do-they"},"Why is it important to understand how computers think(or do they\ud83e\udd14)?"),(0,i.kt)("p",null,"The reason it is important to understand how computers actually \u201cthink\u201d (i.e. perform calculations that make them capable of even defeating the world champions at chess) is because you can make the computers perform various tasks only when you know how the computers work on these tasks at a lower level. You will be able to create better computer programs if you understand how computers actually interpret the instructions specified in these computer programs."),(0,i.kt)("h2",{id:"introduction-to-the-lesson"},"Introduction to the Lesson"),(0,i.kt)("p",null,"In this lesson we are going to discover whether computers have \u201cthinking\u201d power or not and how a software programmer can make computers perform tasks that make them seem like they are capable of thinking.\nWe will also understand what algorithms are and why thinking in terms of algorithms is important to make computers perform the task that you want them to perform. "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"We will discuss the following major points in this lesson")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"How did computers become so clever?")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Definitions and examples of algorithms")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"How to think algorithmically as a Programmer? ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Flowcharts & Pseudocode"))),(0,i.kt)("h3",{id:"how-did-computers-become-so-clever"},"How did computers become so clever?"),(0,i.kt)("p",null,"Before discussing how computers are able to do such miraculous things like beating the world chess champion or even having a conversation with a human, we have to discuss whether computers can think on their own or not.\n\ud83d\udcad Can computers actually think ? "),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Thinking in the human sense involves imagination, gathering all the information you have, analysing the actual situation, comparing it over and over again, in less than a second and then making a choice with your own will and these choices might not even be based on logic or rules.")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("em",{parentName:"p"},"Computers simply cannot think"),". If you thought that computers are able to think by looking at various applications like voice recognition and face recognition, you have been deceived by the complexity of these applications. But, at a deeper level, these applications also contain only basic programming instructions and only follow the instructions to perform various tasks.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"How do computers seem to be able to think?")),(0,i.kt)("p",null,"How do these devices always do PRECISELY what you tell them? A computer program is essentially a list of very specific rules and instructions - perhaps like a cooking recipe. It follows that recipe to the letter - never straying from it - never having an original thought of any kind."),(0,i.kt)("p",null,"The actual instructions for the computer have to be written very precisely in special languages (called ",(0,i.kt)("strong",{parentName:"p"},"programming languages")," which you will learn more about in upcoming modules)."),(0,i.kt)("p",null,"With that said, we are now in the age of \u201cArtificial Intelligence\u201d - where we write a set of rules for the mindless machine that make it seem like it\u2019s thinking. Let\u2019s look at a program to play ",(0,i.kt)("strong",{parentName:"p"},"Tic-Tac-Toe"),". "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Artificial Intelligence"),"\nLet\u2019s say we write a program to play ",(0,i.kt)("em",{parentName:"p"},"Tic-Tac-Toe"),". AI programs create relations between decisions and results, if it loses (which it will do a lot initially) - it will never play that same way again. So eventually, after enough time playing real human players, it\u2019ll learn a set of moves that will allow it to win (or at least draw) every single time. You will learn more about AI in more advanced courses in the future."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"The Recipe Analogy")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://s3.ap-south-1.amazonaws.com/kalvi-education.github.io/problem-solving/recipe_analogy.jpeg",alt:null})),(0,i.kt)("p",null,"Let us continue with the cooking analogy and consider an imaginary person who has never been to a kitchen nor have they seen anyone cook anything before i.e. . If you require this person to cook a dish for you, what would you do?"),(0,i.kt)("p",null,"You would have to give them a recipe which would involve a step-by-step detailed guide along with all considerations like if an ingredient X is not available, then what to do and so on. "),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Computers also work the same way, we give them a step-by-step guide with all possible considerations so that they can perform the desired task because as we have come to realize, computers are ",(0,i.kt)("strong",{parentName:"p"},"dumb machines that do exactly as they are instructed to")," (no more and no less). They are basically a group of circuits with 0s and 1s(representation for low voltage and high voltage) flowing in them. Thus, we need to provide step-by-step and clear instructions to the computer. These ",(0,i.kt)("strong",{parentName:"p"},"step-by-step instructions")," are what we call ",(0,i.kt)("strong",{parentName:"p"},"algorithms"),", which we\u2019ll discuss in detail shortly. ")),(0,i.kt)("p",null,"Let's get familiar with the term ",(0,i.kt)("em",{parentName:"p"},'"Alogrithmic Thinking".'),"\n",(0,i.kt)("em",{parentName:"p"},"(Duration : till 1:14)")),(0,i.kt)(n.Z,{videoId:"uvsQPXJaulU",start:"00",end:"74",mdxType:"Youtube"}),(0,i.kt)("h2",{id:"definition-of-algorithmic-thinking"},"Definition of Algorithmic Thinking"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Algorithmic thinking is a systematic way of thinking through problems and solutions in a way that\u2019s similar to how a computer would run. This approach automates the problem-solving process by creating a series of systematic, logical steps for the computer(or even a human) to follow.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Algorithmic thinking is not solving for a specific answer; instead, it solves how to build a sequential, complete, and replicable process that has an end point. ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Algorithmic thinking is a component of computational thinking about which you have already studied"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"What are Algorithms?")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Algorithms are a series of instructions that are followed, step by step, to do something useful or solve a problem. For example, you could consider a cake recipe an algorithm for making a cake.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In computer science, algorithms provide computers with a successive guide to completing actions. They consist of a precise list of instructions that outline exactly how to complete a task.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In higher level applications, algorithms act in complex patterns, each using smaller and smaller sub-methods which are built up to the program as a whole."))),(0,i.kt)("p",null,"Let's get familiar with the term ",(0,i.kt)("em",{parentName:"p"},'"Alogrithms".'),"\n",(0,i.kt)("em",{parentName:"p"},"(Duration : from 1:14 till 3:45)")),(0,i.kt)(n.Z,{videoId:"uvsQPXJaulU",start:"74",end:"225",mdxType:"Youtube"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Essential Properties of Algorithms")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Input")," An algorithm should have 0 or more well-defined inputs."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Output")," An algorithm should have 1 or more well-defined outputs, and should match the desired output."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Definiteness")," The sequence of events and the details of each step must be clearly defined along with the mechanism to handle errors"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Unambiguity")," Algorithms should be clear and unambiguous. Each of its steps (or phases), and their inputs/outputs should be clear and must lead to only one meaning."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Effectiveness")," The operations must be doable and the algorithm must be feasible in terms of computing resources."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Finiteness")," Algorithms must terminate after a finite number of steps"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Notations to represent algorithms")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Natural Languages : Languages used by humans like English can be used to write out algorithms just like a cooking recipe is written out.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Flowchart : A diagramatic representation")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Pseudo Code : A fake code"))),(0,i.kt)("p",null,"We will learn about flowcharts and pseudocodes in detail shortly."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://media0.giphy.com/media/5nSIhPtqyXqEjnjNGJ/giphy.gif?cid=ecf05e47lxg2vhhd1qk6tjc52q7uphc04i78r8f59lfsm1i8&rid=giphy.gif&ct=g",alt:null})),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Source: ",(0,i.kt)("a",{parentName:"em",href:"https://giphy.com/gifs/stay-tuned-abo-aboshop-5nSIhPtqyXqEjnjNGJ"},"Giphy"))),(0,i.kt)("h2",{id:"flowcharts"},"Flowcharts"),(0,i.kt)("p",null,"It is a ",(0,i.kt)("strong",{parentName:"p"},"diagrammatic notation")," that uses various graphical symbols to represent an algorithm and it produces the most unambiguous and easy to understand representation of an algorithm."),(0,i.kt)("p",null,"It makes use of symbols which are connected among them to indicate the flow of information and processing. "),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"An example for a flowchart considering a real life situation is described as below")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://s3.ap-south-1.amazonaws.com/kalvi-education.github.io/problem-solving/flowchart_1.png",alt:null})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Symbols used in Flowcharts")),(0,i.kt)("p",null,"The basic symbols used in flowcharts are specified below along with their names. You can understand the use case of each of these by the name itself. You will understand them more clearly once you start drawing flowcharts."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://s3.ap-south-1.amazonaws.com/kalvi-education.github.io/problem-solving/Flowchart_2.png",alt:null})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Why are Flowcharts important?")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Effective Communication")," Flowcharts are a better way of communicating the logic of the system."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Effective Analysis")," Using flowchart problems can be analysed more efficiently."),(0,i.kt)("p",null,"`Easy Debugging and Efficient Testing"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Efficient Coding")," The flowcharts are very useful during the program development phase."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Proper Documentation")," Flowcharts serves as a good program documentation, which is needed for various purposes."),(0,i.kt)("h2",{id:"pseudocode"},"Pseudocode"),(0,i.kt)("p",null,"Pseudocode literally means \u2018fake code\u2019. It is an informal and contrived way of writing programs in which you represent the sequence of actions and instructions (aka algorithms) in a form that humans can easily understand. "),(0,i.kt)("p",null,"The language of a computer is very rigid: you are not allowed to make any mistakes or deviate from the rules. Pseudocode works as a method for writing algorithms similar to a programming language without the rigidity of a programming language. "),(0,i.kt)("p",null,"In pseudocode, you don't have to think about semicolons, curly braces, the syntax for arrow functions, how to define promises, DOM methods and other core language principles. You just have to be able to explain what you're thinking and doing."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Main Constructs of Pseudocode")),(0,i.kt)("p",null,"The core of pseudocode is the ability to represent 6 programming constructs (always written in uppercase): SEQUENCE, CASE, WHILE, REPEAT-UNTIL, FOR, and IF-THEN-ELSE. These constructs \u2014 also called keywords \u2014are used to describe the control flow of the algorithm."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"SEQUENCE represents linear tasks sequentially performed one after the other.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"WHILE a loop with a condition at its beginning.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"REPEAT-UNTIL a loop with a condition at the bottom.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"FOR another way of looping.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"IF-THEN-ELSE a conditional statement changing the flow of the algorithm.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"CASE the generalisation form of IF-THEN-ELSE."))),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://s3.ap-south-1.amazonaws.com/kalvi-education.github.io/problem-solving/Pseudocode_1.png",alt:null})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Why is pseudocode important?")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When you're writing code in a programming language, you\u2019ll have to battle with strict syntax and rigid coding patterns. Since pseudocode is an informal method of program design, you don\u2019t have to obey any set-out rules.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Pseudocode allows you to plan instructions which follow a logical pattern, without including all of the technical details.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Pseudocode helps in starting with software programming as a beginner as you won't have to overwhelm your brain with coding syntax.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In fact, many companies organise programming tests for their interviewees in pseudocode. This is because the importance of problem solving supersedes the ability to \u2018hack\u2019 computer code.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Planning computer algorithms with pseudocode makes you meticulous. It helps you explain exactly what each line in a software program should do. This is possible because you are in full control of everything, which is one of the great features of pseudocode."))),(0,i.kt)("h2",{id:"how-to-think-algorithmically"},"How to think Algorithmically?"),(0,i.kt)("p",null,"Thinking algorithmically is a mindshift from how we, as humans, usually think. We all have unconsciously built up ",(0,i.kt)("strong",{parentName:"p"},"shortcuts, assumptions, and rules of thumb")," that we use to help us solve everyday problems without thinking about them. It is the way of thinking based on how computers would perform a particular task. "),(0,i.kt)("p",null,"We\u2019re not used to breaking our thought process down into its ",(0,i.kt)("strong",{parentName:"p"},"individual steps")," and translating that to what computers can do. For instance, computers can\u2019t jump to general spots in a dictionary to find a word based on its spelling. A computer has to have very specific instructions."),(0,i.kt)("p",null,"Like all skills, thinking algorithmically takes practice."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Algorithmic thinking is all about")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Defining the problem clearly")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Breaking the problem down into small, simple parts")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Define the solution for each part of the problem")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Implementing the solution")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Making it efficient (eventually) (For complex algorithms)"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Problem Statement:")," Check whether the given number is prime or not."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"The first step is to understand and define the problem clearly")," "),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"We know that a prime number is a number that has exactly two factors i.e. it is only divisible by 1 AND itself. So, we have to check for numbers with precisely 2 factors with our algorithm.")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"The next step is to actually tackle the problem by dividing it into smaller parts")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Here, we can divide the problem into checking for factors and then counting the number of factors for the given number.")))}u.isMDXComponent=!0},9304:(e,t,o)=>{o.d(t,{Z:()=>n});var a=o(3191),i=o(7294);const n=e=>{var t;const o={height:"390",width:"640",playerVars:{autoplay:0,...e.start&&{start:e.start},...e.end&&{end:e.end}}};return i.createElement(a.Z,{videoId:null!=(t=e.videoId)?t:"",opts:o})}}}]);